/*
 * Copyright (c) 2023 European Commission
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@preconcurrency import Foundation
@testable import eudi_lib_sdjwt_swift
import X509
import SwiftyJSON

let key =
  """
  {
    "kty": "EC",
    "crv": "P-256",
    "x": "b28d4MwZMjw8-00CG4xfnn9SLMVMM19SlqZpVb_uNtQ",
    "y": "Xv5zWwuoaTgdS6hV43yI6gBwTnjukmFQQnJ_kCxzqk8"
  }
  """
  .clean()

// Key Pairs Used in the examples
let holdersKeyPair = generateES256KeyPair()

nonisolated(unsafe) let issuersKeyPair = generateES256KeyPair()

struct SDJWTConstants {
  
  static let compactSdJwt = "eyJhbGciOiAiRVMyNTYiLCAidHlwIjogImV4YW1wbGUrc2Qtand0In0.eyJfc2QiOiBbIkNyUWU3UzVrcUJBSHQtbk1ZWGdjNmJkdDJTSDVhVFkxc1VfTS1QZ2tqUEkiLCAiSnpZakg0c3ZsaUgwUjNQeUVNZmVadTZKdDY5dTVxZWhabzdGN0VQWWxTRSIsICJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJIiwgIlRHZjRvTGJnd2Q1SlFhSHlLVlFaVTlVZEdFMHc1cnREc3JaemZVYW9tTG8iLCAiWFFfM2tQS3QxWHlYN0tBTmtxVlI2eVoyVmE1TnJQSXZQWWJ5TXZSS0JNTSIsICJYekZyendzY002R242Q0pEYzZ2Vks4QmtNbmZHOHZPU0tmcFBJWmRBZmRFIiwgImdiT3NJNEVkcTJ4Mkt3LXc1d1BFemFrb2I5aFYxY1JEMEFUTjNvUUw5Sk0iLCAianN1OXlWdWx3UVFsaEZsTV8zSmx6TWFTRnpnbGhRRzBEcGZheVF3TFVLNCJdLCAiaXNzIjogImh0dHBzOi8vaXNzdWVyLmV4YW1wbGUuY29tIiwgImlhdCI6IDE2ODMwMDAwMDAsICJleHAiOiAxODgzMDAwMDAwLCAic3ViIjogInVzZXJfNDIiLCAibmF0aW9uYWxpdGllcyI6IFt7Ii4uLiI6ICJwRm5kamtaX1ZDem15VGE2VWpsWm8zZGgta284YUlLUWM5RGxHemhhVllvIn0sIHsiLi4uIjogIjdDZjZKa1B1ZHJ5M2xjYndIZ2VaOGtoQXYxVTFPU2xlclAwVmtCSnJXWjAifV0sICJfc2RfYWxnIjogInNoYS0yNTYiLCAiY25mIjogeyJqd2siOiB7Imt0eSI6ICJFQyIsICJjcnYiOiAiUC0yNTYiLCAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSJ9fX0.ZfSxIFLHf7f84WIMqt7Fzme8-586WutjFnXH4TO5XuWG_peQ4hPsqDpiMBClkh2aUJdl83bwyyOriqvdFra-bg~WyIyR0xDNDJzS1F2ZUNmR2ZyeU5STjl3IiwgImdpdmVuX25hbWUiLCAiSm9obiJd~WyJlbHVWNU9nM2dTTklJOEVZbnN4QV9BIiwgImZhbWlseV9uYW1lIiwgIkRvZSJd~WyI2SWo3dE0tYTVpVlBHYm9TNXRtdlZBIiwgImVtYWlsIiwgImpvaG5kb2VAZXhhbXBsZS5jb20iXQ~WyJlSThaV205UW5LUHBOUGVOZW5IZGhRIiwgInBob25lX251bWJlciIsICIrMS0yMDItNTU1LTAxMDEiXQ~WyJRZ19PNjR6cUF4ZTQxMmExMDhpcm9BIiwgInBob25lX251bWJlcl92ZXJpZmllZCIsIHRydWVd~WyJBSngtMDk1VlBycFR0TjRRTU9xUk9BIiwgImFkZHJlc3MiLCB7InN0cmVldF9hZGRyZXNzIjogIjEyMyBNYWluIFN0IiwgImxvY2FsaXR5IjogIkFueXRvd24iLCAicmVnaW9uIjogIkFueXN0YXRlIiwgImNvdW50cnkiOiAiVVMifV0~WyJQYzMzSk0yTGNoY1VfbEhnZ3ZfdWZRIiwgImJpcnRoZGF0ZSIsICIxOTQwLTAxLTAxIl0~WyJHMDJOU3JRZmpGWFE3SW8wOXN5YWpBIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ~WyJsa2x4RjVqTVlsR1RQVW92TU5JdkNBIiwgIlVTIl0~WyJuUHVvUW5rUkZxM0JJZUFtN0FuWEZBIiwgIkRFIl0~"
  
  static let payload = "eyJfc2QiOiBbIkNyUWU3UzVrcUJBSHQtbk1ZWGdjNmJkdDJTSDVhVFkxc1VfTS1QZ2tqUEkiLCAiSnpZakg0c3ZsaUgwUjNQeUVNZmVadTZKdDY5dTVxZWhabzdGN0VQWWxTRSIsICJQb3JGYnBLdVZ1Nnh5bUphZ3ZrRnNGWEFiUm9jMkpHbEFVQTJCQTRvN2NJIiwgIlRHZjRvTGJnd2Q1SlFhSHlLVlFaVTlVZEdFMHc1cnREc3JaemZVYW9tTG8iLCAiWFFfM2tQS3QxWHlYN0tBTmtxVlI2eVoyVmE1TnJQSXZQWWJ5TXZSS0JNTSIsICJYekZyendzY002R242Q0pEYzZ2Vks4QmtNbmZHOHZPU0tmcFBJWmRBZmRFIiwgImdiT3NJNEVkcTJ4Mkt3LXc1d1BFemFrb2I5aFYxY1JEMEFUTjNvUUw5Sk0iLCAianN1OXlWdWx3UVFsaEZsTV8zSmx6TWFTRnpnbGhRRzBEcGZheVF3TFVLNCJdLCAiaXNzIjogImh0dHBzOi8vaXNzdWVyLmV4YW1wbGUuY29tIiwgImlhdCI6IDE2ODMwMDAwMDAsICJleHAiOiAxODgzMDAwMDAwLCAic3ViIjogInVzZXJfNDIiLCAibmF0aW9uYWxpdGllcyI6IFt7Ii4uLiI6ICJwRm5kamtaX1ZDem15VGE2VWpsWm8zZGgta284YUlLUWM5RGxHemhhVllvIn0sIHsiLi4uIjogIjdDZjZKa1B1ZHJ5M2xjYndIZ2VaOGtoQXYxVTFPU2xlclAwVmtCSnJXWjAifV0sICJfc2RfYWxnIjogInNoYS0yNTYiLCAiY25mIjogeyJqd2siOiB7Imt0eSI6ICJFQyIsICJjcnYiOiAiUC0yNTYiLCAieCI6ICJUQ0FFUjE5WnZ1M09IRjRqNFc0dmZTVm9ISVAxSUxpbERsczd2Q2VHZW1jIiwgInkiOiAiWnhqaVdXYlpNUUdIVldLVlE0aGJTSWlyc1ZmdWVjQ0U2dDRqVDlGMkhaUSJ9fX0"
  
  static let disclosures = [
    "WyJlSThaV205UW5LUHBOUGVOZW5IZGhRIiwgInBob25lX251bWJlciIsICIrMS0yMDItNTU1LTAxMDEiXQ",
    "WyJRZ19PNjR6cUF4ZTQxMmExMDhpcm9BIiwgInBob25lX251bWJlcl92ZXJpZmllZCIsIHRydWVd",
    "WyJlbHVWNU9nM2dTTklJOEVZbnN4QV9BIiwgImZhbWlseV9uYW1lIiwgIkRvZSJd",
    "WyJQYzMzSk0yTGNoY1VfbEhnZ3ZfdWZRIiwgImJpcnRoZGF0ZSIsICIxOTQwLTAxLTAxIl0",
    "WyJsa2x4RjVqTVlsR1RQVW92TU5JdkNBIiwgIlVTIl0",
    "WyJuUHVvUW5rUkZxM0JJZUFtN0FuWEZBIiwgIkRFIl0",
    "WyJBSngtMDk1VlBycFR0TjRRTU9xUk9BIiwgImFkZHJlc3MiLCB7InN0cmVldF9hZGRyZXNzIjogIjEyMyBNYWluIFN0IiwgImxvY2FsaXR5IjogIkFueXRvd24iLCAicmVnaW9uIjogIkFueXN0YXRlIiwgImNvdW50cnkiOiAiVVMifV0",
    "WyIyR0xDNDJzS1F2ZUNmR2ZyeU5STjl3IiwgImdpdmVuX25hbWUiLCAiSm9obiJd",
    "WyJHMDJOU3JRZmpGWFE3SW8wOXN5YWpBIiwgInVwZGF0ZWRfYXQiLCAxNTcwMDAwMDAwXQ",
    "WyI2SWo3dE0tYTVpVlBHYm9TNXRtdlZBIiwgImVtYWlsIiwgImpvaG5kb2VAZXhhbXBsZS5jb20iXQ"
  ]
  
  static let signature = "ZfSxIFLHf7f84WIMqt7Fzme8-586WutjFnXH4TO5XuWG_peQ4hPsqDpiMBClkh2aUJdl83bwyyOriqvdFra-bg"
  static let protected = "eyJhbGciOiAiRVMyNTYiLCAidHlwIjogImV4YW1wbGUrc2Qtand0In0"
  
  static let x509_sd_jwt = """
                eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlEbmpDQ0FvYWdBd0lCQWdJVWVMVi9kOGpiOUJqODFDelZwNHJzN0pobnlnc3dEUVlKS29aSWh2Y05BUUVMQlFBd1d6RUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWtOQk1Rc3dDUVlEVlFRSERBSlRSakVZTUJZR0ExVUVDZ3dQU1c1MFpYSnRaV1JwWVhSbElFTkJNUmd3RmdZRFZRUUREQTlKYm5SbGNtMWxaR2xoZEdVZ1EwRXdIaGNOTWpReE1EQXlNRFkwTXpNMldoY05NalV4TURBeU1EWTBNek0yV2pCV01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEN6QUpCZ05WQkFjTUFsTkdNUkl3RUFZRFZRUUtEQWxNWldGbUlFTmxjblF4R1RBWEJnTlZCQU1NRUd4bFlXWXVaWGhoYlhCc1pTNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBBRFpRbTdiSWd1a2hERVFIbEhmdGQyVVJIQ3hYQ1QrMTJJc2NmaEhNSU4zS2tJdkNWTXZZQTlwMjBZZTJqeVd5UjJKZHdNZ2RQQnZBMWJJVXNnNENTaUE0M2sybWZnREo4NFRHQkNNK1BCYXQwbWhWZGc5QmtqTlBBb1BBWndSOHN5Q3B3NEszNVY4WmpmaEdJSUhVL1ZTdWsrTEFrc3l0MEpNdTAvMnFZK0l1VmtzWDh4UXlyV2lPOUlNQlZuK21JMmRsSWQwMmFzeDFxaGRkRkhPMXRSUGxTdHFpMGdGSjNtb0RDSW40dGR3d2lHV1lkUkFqalBvNVR2Wkw5SnVZQVZQS1VhdlpqZnpUSDZTeWU1dDBJVjR4MGxMSUppTUVrS0pnZGpwSmJ3OS8vL0V1ZVlVNENDYkNaR1N6THpZWTlwVTNJUWRHb05VWTdnckloYlZOQWdNQkFBR2pYekJkTUJzR0ExVWRFUVFVTUJLQ0VHeGxZV1l1WlhoaGJYQnNaUzVqYjIwd0hRWURWUjBPQkJZRUZOM3hSV3N6NHI5ZEZvSUgxNzNySGZvNEdEOWNNQjhHQTFVZEl3UVlNQmFBRkNkdTRQcXFPMHdLQTBKMWc0dTA0bzkycDRlc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQldJbU02TnBDaG5uUjJpUkp3M3d2SXZpTHIwWWNyZG41cTZoa3FQbk1JYXhaVy9lOFNDb29FT2o5TWpGMHJBc1RSQmxteUJJclJuTWw2b3hUNFBtVUhpVURPUXJ4Wk9saGRLOHJKVGZXVm5UVGErUFBibFZvZkdkellrQm1YVUNQYjdhY0JlYWJmQzRLNG92SEs2cFdQSzlJMUlGZmhWZ1hubHpBNWw5WE9nd1Q4OFNJbkFBRmVzRDMyNlVuTnRNUFNlb212MjI5Q1lVYU1QckhRL2RBYlBvajJnQkJCWFd0QkZSaWhMTURmWkZUQTNHZ0FhU2lWVUgwZ2tiUEtOY0R3NDRCMXpaNjdIaWFkZzBpQTBwaFRBWGxROGQxa3JaWVR6WUFlajZ3VVdoUytGRHRERTlYZE5hL3RCZEpuaXRjbFhtZnVxZDJZd1VJaUtTRUtPdGd0IiwiTUlJRGRqQ0NBbDZnQXdJQkFnSVVHYkRKQlFjbFh5YVZ1K1FXY1JnZDcrczVNU1V3RFFZSktvWklodmNOQVFFTEJRQXdTekVMTUFrR0ExVUVCaE1DVlZNeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUhEQUpUUmpFUU1BNEdBMVVFQ2d3SFVtOXZkQ0JEUVRFUU1BNEdBMVVFQXd3SFVtOXZkQ0JEUVRBZUZ3MHlOREV3TURJd05qUXpNRGxhRncweU9URXdNREV3TmpRek1EbGFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVMTUFrR0ExVUVCd3dDVTBZeEdEQVdCZ05WQkFvTUQwbHVkR1Z5YldWa2FXRjBaU0JEUVRFWU1CWUdBMVVFQXd3UFNXNTBaWEp0WldScFlYUmxJRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0dTVad3QzMzBCOE9Ccm50UU5IZWg5WDZScDZsbkxPaUErZzdIOThzWWlSN1JteTE1TVRLR3UrNFZhRmJPdVR6anBkUjk1NTlzT050L2RyMFdtTEt3bXhHamFYd3FMcFdHZmVsV1NtQnJuakZ4cjNFS0p2S0VCZU5CL2UyY2ViSjlSdU8vWGlLT0NKcFdGdlIxRlp1OFJtS1QySWFoZXlKVDhlQmx3Q1VKUzZvOGo0RkRTYXhtQThUbXo3Y1kwL1VjUnlnKzhZRVRxTDNGZkRZS0doM0NNU013RlVKb3F3UE9ZaHZlMGVRWWFGek9FTTVIUUJ4cFpOdnJZemVxTm42cmU0cjZpSHZyM2doQ3JaNW9tSnBzTVN5ZGEzeTRUMW1zOUl3TFZsWUlESVZsd0dHSmpZNGU2ejloWUpaYytQTmc4OUtGeTNMMWlhY29lVjFWc0dNNndJREFRQUJvMEl3UURBZEJnTlZIUTRFRmdRVUoyN2crcW83VEFvRFFuV0RpN1RpajNhbmg2d3dId1lEVlIwakJCZ3dGb0FVV1RzSVZBaHhIaTNObEVGSEx5YU12OFJqa2Nzd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHZzNkMFJ3UlczbXdDN1BSZERlSExsYTZEcmhhTXRra2JkWHJqb3VjZHpkM0tmWlIrdTM1U1h4eXdxUkVHWit5cUhhQjFGOFovcXlPYVN1M3N6MjNYKyt0YWdiQ21qYklGSGdDSWpua0RsK2twWUVhOTdQYXBzSDJlMndNc095MDNVMjBXajFNUkpjT0ZrUk5sd014dWZoL05iY2pYejdGUHhOaDJ1OFluRER1R0VGVFM2L3g3WHFNMFlVOWRXNDUrdXV5V3BxTnFYcHRzL3d1SXNSZzk4ZXdHblhuMC80S0ttYjRaNGhmZ0xnNmdFU2NoYy8velJDekxqWjgvZ0lOSjFyUk00aUlrdUxIN240OFRPMm0yanlsWmRueGpoQmsvUmtuYVVSWFZ1Q0hlNW16Rks3enNKR3orOU9rY2tBYS9VUDdUa1ozTmJvY1BoUXZlU1k3UzA9IiwiTUlJRGR6Q0NBbCtnQXdJQkFnSVVRNXN2WDZ2RkpPMWY5TjMvczVvYXB4RXZwb2N3RFFZSktvWklodmNOQVFFTEJRQXdTekVMTUFrR0ExVUVCaE1DVlZNeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUhEQUpUUmpFUU1BNEdBMVVFQ2d3SFVtOXZkQ0JEUVRFUU1BNEdBMVVFQXd3SFVtOXZkQ0JEUVRBZUZ3MHlOREV3TURJd05qUXlORFphRncwek5EQTVNekF3TmpReU5EWmFNRXN4Q3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVMTUFrR0ExVUVCd3dDVTBZeEVEQU9CZ05WQkFvTUIxSnZiM1FnUTBFeEVEQU9CZ05WQkFNTUIxSnZiM1FnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURKNGxBOThlQVA3SGJ1emkvS1Nza1BwN0o4eUY0SEdSVzBZU0VRVWdId3dBbnlGZWVBUitZWVZRRmRnajJROU1FSGhjMGZlK25JWVpGSFNUVm8yQm8vNVJtcHN4RU9wNTB2SWNUYThIT0FtOFRvZWpsYzhMMWI4eTNnV1oyQUQ2NlVzeU5OZmJ2NEZPZlhFRGtLeXBsc1JIYkFMcVZDaWZ1T2xRMjZXTFdlTjNtQTJEZmVBbUxtWDZKQnBLejNEUE1ZS2RWdVFKWWZYUm9MWGRuNHRFQ1d0RkNOUm52ODRUMGE4bGUyZjJmRjBlNk9MN0JPSjJIcHo2R1FNakYxdTNkTGhwdmRCQVVBR0k5NkowQ1RrZVhsUDhadlZCZkNvK094alMrZXhRSitwV1NMSUU2WTJCMHEzbFNhTFRtK2JKMHd3Q042RTlMc3JxMVhzK09OdDJ4RkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUlpPd2hVQ0hFZUxjMlVRVWN2Sm95L3hHT1J5ekFmQmdOVkhTTUVHREFXZ0JSWk93aFVDSEVlTGMyVVFVY3ZKb3kveEdPUnl6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWErekNsU3VGMzZOV2JLR1AyTXVzQS9oYjRzdWxqaWVDOEg5RU9MVm9KeGNsZ0dnMnlXbG5tMlNQZXhRRGZTTGVtUjVJazZmemhCN1gzcnRSNmZTTm9vYk5Yd3hCTHhjVG41bzYxTm5McS8vOHF3QmVTUzdreWVmRU5nTVhtL2FONEk5YjhBTGRNdjFNWTg4aSt5cHlNTVlJc21QTy9yKzg3M1NKVXNTV2w2OENjZk8wYlRMaEphWS9BdXBRZDduaEorY0Jzak1HbDlscjhGVU9zeVN1TXljUGdNTzJuemhkUlRFSG01ZWFURkI0c1lpT2FvclZLVkdVNmJ2ZkE3Q1VqdHNpNEJFb3pvcWYrNDY2ajVBb01ZVmM4YlNwYkZ6QTdsYSt4ZGZ3ZlJRTEhSVUxZRnhMK0VobVpRYnVqNitkUytGcjQwTGZzQVlTak1aR3ZLUEoyIl19.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlzcyI6Imh0dHBzOi8vbGVhZi5leGFtcGxlLmNvbSIsIl9zZF9hbGciOiJzaGEtMjU2IiwiX3NkIjpbIjN4YnVoa3R6UVZMR21rMEtrbnNMVUREQVJRNDNST2Y3YlNUWFc4OXdGVXMiXSwiTmF0aW9uYWxpdGVzIjpbeyIuLi4iOiJwZjRGTllTdVhZc0tDRFJEaXlVRmNFdGI4WHRXeWc3b2cydzhSelJFZ1lvIn0seyIuLi4iOiJtNUVZU1pRM2ZQUFhEUlJtOFVvT3IzTmJXdW1IUDNvemYzSzNkd0Zqai00In1dLCJhZHJlc3MiOnsibG9jYWxpdHkiOiJnciIsIl9zZCI6WyJFd2xqSE8teFF0N3g0UGFXcU14cl9ZOTQtYUNxZ0o3dGlxTl9TdmJIazlJIiwiV1dNS0R1bTBOcWRvZHdBSU9iaGFfSEZCWmNEanNMYmRLZTJGLUk4ODZjMCIsImJieWtDUXlYeDBBZmRrU0tfSkxfNlFDQ0hfY0hPX2lnOXdOU3AxeVNGV1EiLCJnbWZhWkF5N0xXSUgweU1LWDNmTGV1VEF1NFg5M2p4MW1wTDZFUmhvdjdJIiwibFNreWRCOEx2blhmU3FRMlZMZXlWVjFuMGgwUWJ0OHBBUjFLWkVXT0ZBayIsInRjZzNRLVdfalRzeWE0TV9pNFJEdnpjNjZjT2FHMjZkLWFmTTlOTFJWOE0iLCJ3UkkxYTY1ZE9NR3JOTzZFY0RoN0VBS0E4VDRfNGhVMzRKMnAyckRfVDFjIl19fQ.RG9UXLS6dC1ihYY9jut1a7hc4s_hOlYoAa4iwk-uFeMwz6muRvR-Hs7KyXGWSNfqmrGYHFmRWduTOH-93ZX34xA0q4P9fqOztMxbzp6Fex10NTosNpMCrNFnscsQY--4W4Dg5evQHSIiW0avzPzYvnTvMSFR7w4iigOj7WI1He_qI4YTATohT4HX26gTlDrIpuSS5iMlqLzsbjep3hA3DEc_LuFBZtDmsE3haGlIaE7Dg4GYlJH6GyHxu2HSei9T-Re-5jAPYHocXqukjgol4h8Go8wJdx-NaZ-aBcJzMtOQdzDj6sEqjQGwf6yh9jYs3CGVPYwvkwU3jltGm-E0ow~WyJSRGhCNm1YYTRvLXhtNWYzM1VKaGZnIiwiREUiXQ~
                """
  
  static let x509_sd_jwt_no_disclosures = """
                eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsIng1YyI6WyJNSUlEbmpDQ0FvYWdBd0lCQWdJVWVMVi9kOGpiOUJqODFDelZwNHJzN0pobnlnc3dEUVlKS29aSWh2Y05BUUVMQlFBd1d6RUxNQWtHQTFVRUJoTUNWVk14Q3pBSkJnTlZCQWdNQWtOQk1Rc3dDUVlEVlFRSERBSlRSakVZTUJZR0ExVUVDZ3dQU1c1MFpYSnRaV1JwWVhSbElFTkJNUmd3RmdZRFZRUUREQTlKYm5SbGNtMWxaR2xoZEdVZ1EwRXdIaGNOTWpReE1EQXlNRFkwTXpNMldoY05NalV4TURBeU1EWTBNek0yV2pCV01Rc3dDUVlEVlFRR0V3SlZVekVMTUFrR0ExVUVDQXdDUTBFeEN6QUpCZ05WQkFjTUFsTkdNUkl3RUFZRFZRUUtEQWxNWldGbUlFTmxjblF4R1RBWEJnTlZCQU1NRUd4bFlXWXVaWGhoYlhCc1pTNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFBBRFpRbTdiSWd1a2hERVFIbEhmdGQyVVJIQ3hYQ1QrMTJJc2NmaEhNSU4zS2tJdkNWTXZZQTlwMjBZZTJqeVd5UjJKZHdNZ2RQQnZBMWJJVXNnNENTaUE0M2sybWZnREo4NFRHQkNNK1BCYXQwbWhWZGc5QmtqTlBBb1BBWndSOHN5Q3B3NEszNVY4WmpmaEdJSUhVL1ZTdWsrTEFrc3l0MEpNdTAvMnFZK0l1VmtzWDh4UXlyV2lPOUlNQlZuK21JMmRsSWQwMmFzeDFxaGRkRkhPMXRSUGxTdHFpMGdGSjNtb0RDSW40dGR3d2lHV1lkUkFqalBvNVR2Wkw5SnVZQVZQS1VhdlpqZnpUSDZTeWU1dDBJVjR4MGxMSUppTUVrS0pnZGpwSmJ3OS8vL0V1ZVlVNENDYkNaR1N6THpZWTlwVTNJUWRHb05VWTdnckloYlZOQWdNQkFBR2pYekJkTUJzR0ExVWRFUVFVTUJLQ0VHeGxZV1l1WlhoaGJYQnNaUzVqYjIwd0hRWURWUjBPQkJZRUZOM3hSV3N6NHI5ZEZvSUgxNzNySGZvNEdEOWNNQjhHQTFVZEl3UVlNQmFBRkNkdTRQcXFPMHdLQTBKMWc0dTA0bzkycDRlc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQldJbU02TnBDaG5uUjJpUkp3M3d2SXZpTHIwWWNyZG41cTZoa3FQbk1JYXhaVy9lOFNDb29FT2o5TWpGMHJBc1RSQmxteUJJclJuTWw2b3hUNFBtVUhpVURPUXJ4Wk9saGRLOHJKVGZXVm5UVGErUFBibFZvZkdkellrQm1YVUNQYjdhY0JlYWJmQzRLNG92SEs2cFdQSzlJMUlGZmhWZ1hubHpBNWw5WE9nd1Q4OFNJbkFBRmVzRDMyNlVuTnRNUFNlb212MjI5Q1lVYU1QckhRL2RBYlBvajJnQkJCWFd0QkZSaWhMTURmWkZUQTNHZ0FhU2lWVUgwZ2tiUEtOY0R3NDRCMXpaNjdIaWFkZzBpQTBwaFRBWGxROGQxa3JaWVR6WUFlajZ3VVdoUytGRHRERTlYZE5hL3RCZEpuaXRjbFhtZnVxZDJZd1VJaUtTRUtPdGd0IiwiTUlJRGRqQ0NBbDZnQXdJQkFnSVVHYkRKQlFjbFh5YVZ1K1FXY1JnZDcrczVNU1V3RFFZSktvWklodmNOQVFFTEJRQXdTekVMTUFrR0ExVUVCaE1DVlZNeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUhEQUpUUmpFUU1BNEdBMVVFQ2d3SFVtOXZkQ0JEUVRFUU1BNEdBMVVFQXd3SFVtOXZkQ0JEUVRBZUZ3MHlOREV3TURJd05qUXpNRGxhRncweU9URXdNREV3TmpRek1EbGFNRnN4Q3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVMTUFrR0ExVUVCd3dDVTBZeEdEQVdCZ05WQkFvTUQwbHVkR1Z5YldWa2FXRjBaU0JEUVRFWU1CWUdBMVVFQXd3UFNXNTBaWEp0WldScFlYUmxJRU5CTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF0dTVad3QzMzBCOE9Ccm50UU5IZWg5WDZScDZsbkxPaUErZzdIOThzWWlSN1JteTE1TVRLR3UrNFZhRmJPdVR6anBkUjk1NTlzT050L2RyMFdtTEt3bXhHamFYd3FMcFdHZmVsV1NtQnJuakZ4cjNFS0p2S0VCZU5CL2UyY2ViSjlSdU8vWGlLT0NKcFdGdlIxRlp1OFJtS1QySWFoZXlKVDhlQmx3Q1VKUzZvOGo0RkRTYXhtQThUbXo3Y1kwL1VjUnlnKzhZRVRxTDNGZkRZS0doM0NNU013RlVKb3F3UE9ZaHZlMGVRWWFGek9FTTVIUUJ4cFpOdnJZemVxTm42cmU0cjZpSHZyM2doQ3JaNW9tSnBzTVN5ZGEzeTRUMW1zOUl3TFZsWUlESVZsd0dHSmpZNGU2ejloWUpaYytQTmc4OUtGeTNMMWlhY29lVjFWc0dNNndJREFRQUJvMEl3UURBZEJnTlZIUTRFRmdRVUoyN2crcW83VEFvRFFuV0RpN1RpajNhbmg2d3dId1lEVlIwakJCZ3dGb0FVV1RzSVZBaHhIaTNObEVGSEx5YU12OFJqa2Nzd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHZzNkMFJ3UlczbXdDN1BSZERlSExsYTZEcmhhTXRra2JkWHJqb3VjZHpkM0tmWlIrdTM1U1h4eXdxUkVHWit5cUhhQjFGOFovcXlPYVN1M3N6MjNYKyt0YWdiQ21qYklGSGdDSWpua0RsK2twWUVhOTdQYXBzSDJlMndNc095MDNVMjBXajFNUkpjT0ZrUk5sd014dWZoL05iY2pYejdGUHhOaDJ1OFluRER1R0VGVFM2L3g3WHFNMFlVOWRXNDUrdXV5V3BxTnFYcHRzL3d1SXNSZzk4ZXdHblhuMC80S0ttYjRaNGhmZ0xnNmdFU2NoYy8velJDekxqWjgvZ0lOSjFyUk00aUlrdUxIN240OFRPMm0yanlsWmRueGpoQmsvUmtuYVVSWFZ1Q0hlNW16Rks3enNKR3orOU9rY2tBYS9VUDdUa1ozTmJvY1BoUXZlU1k3UzA9IiwiTUlJRGR6Q0NBbCtnQXdJQkFnSVVRNXN2WDZ2RkpPMWY5TjMvczVvYXB4RXZwb2N3RFFZSktvWklodmNOQVFFTEJRQXdTekVMTUFrR0ExVUVCaE1DVlZNeEN6QUpCZ05WQkFnTUFrTkJNUXN3Q1FZRFZRUUhEQUpUUmpFUU1BNEdBMVVFQ2d3SFVtOXZkQ0JEUVRFUU1BNEdBMVVFQXd3SFVtOXZkQ0JEUVRBZUZ3MHlOREV3TURJd05qUXlORFphRncwek5EQTVNekF3TmpReU5EWmFNRXN4Q3pBSkJnTlZCQVlUQWxWVE1Rc3dDUVlEVlFRSURBSkRRVEVMTUFrR0ExVUVCd3dDVTBZeEVEQU9CZ05WQkFvTUIxSnZiM1FnUTBFeEVEQU9CZ05WQkFNTUIxSnZiM1FnUTBFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURKNGxBOThlQVA3SGJ1emkvS1Nza1BwN0o4eUY0SEdSVzBZU0VRVWdId3dBbnlGZWVBUitZWVZRRmRnajJROU1FSGhjMGZlK25JWVpGSFNUVm8yQm8vNVJtcHN4RU9wNTB2SWNUYThIT0FtOFRvZWpsYzhMMWI4eTNnV1oyQUQ2NlVzeU5OZmJ2NEZPZlhFRGtLeXBsc1JIYkFMcVZDaWZ1T2xRMjZXTFdlTjNtQTJEZmVBbUxtWDZKQnBLejNEUE1ZS2RWdVFKWWZYUm9MWGRuNHRFQ1d0RkNOUm52ODRUMGE4bGUyZjJmRjBlNk9MN0JPSjJIcHo2R1FNakYxdTNkTGhwdmRCQVVBR0k5NkowQ1RrZVhsUDhadlZCZkNvK094alMrZXhRSitwV1NMSUU2WTJCMHEzbFNhTFRtK2JKMHd3Q042RTlMc3JxMVhzK09OdDJ4RkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCUlpPd2hVQ0hFZUxjMlVRVWN2Sm95L3hHT1J5ekFmQmdOVkhTTUVHREFXZ0JSWk93aFVDSEVlTGMyVVFVY3ZKb3kveEdPUnl6QVBCZ05WSFJNQkFmOEVCVEFEQVFIL01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWErekNsU3VGMzZOV2JLR1AyTXVzQS9oYjRzdWxqaWVDOEg5RU9MVm9KeGNsZ0dnMnlXbG5tMlNQZXhRRGZTTGVtUjVJazZmemhCN1gzcnRSNmZTTm9vYk5Yd3hCTHhjVG41bzYxTm5McS8vOHF3QmVTUzdreWVmRU5nTVhtL2FONEk5YjhBTGRNdjFNWTg4aSt5cHlNTVlJc21QTy9yKzg3M1NKVXNTV2w2OENjZk8wYlRMaEphWS9BdXBRZDduaEorY0Jzak1HbDlscjhGVU9zeVN1TXljUGdNTzJuemhkUlRFSG01ZWFURkI0c1lpT2FvclZLVkdVNmJ2ZkE3Q1VqdHNpNEJFb3pvcWYrNDY2ajVBb01ZVmM4YlNwYkZ6QTdsYSt4ZGZ3ZlJRTEhSVUxZRnhMK0VobVpRYnVqNitkUytGcjQwTGZzQVlTak1aR3ZLUEoyIl19.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlzcyI6Imh0dHBzOi8vbGVhZi5leGFtcGxlLmNvbSIsIl9zZF9hbGciOiJzaGEtMjU2IiwiX3NkIjpbIjN4YnVoa3R6UVZMR21rMEtrbnNMVUREQVJRNDNST2Y3YlNUWFc4OXdGVXMiXSwiTmF0aW9uYWxpdGVzIjpbeyIuLi4iOiJwZjRGTllTdVhZc0tDRFJEaXlVRmNFdGI4WHRXeWc3b2cydzhSelJFZ1lvIn0seyIuLi4iOiJtNUVZU1pRM2ZQUFhEUlJtOFVvT3IzTmJXdW1IUDNvemYzSzNkd0Zqai00In1dLCJhZHJlc3MiOnsibG9jYWxpdHkiOiJnciIsIl9zZCI6WyJFd2xqSE8teFF0N3g0UGFXcU14cl9ZOTQtYUNxZ0o3dGlxTl9TdmJIazlJIiwiV1dNS0R1bTBOcWRvZHdBSU9iaGFfSEZCWmNEanNMYmRLZTJGLUk4ODZjMCIsImJieWtDUXlYeDBBZmRrU0tfSkxfNlFDQ0hfY0hPX2lnOXdOU3AxeVNGV1EiLCJnbWZhWkF5N0xXSUgweU1LWDNmTGV1VEF1NFg5M2p4MW1wTDZFUmhvdjdJIiwibFNreWRCOEx2blhmU3FRMlZMZXlWVjFuMGgwUWJ0OHBBUjFLWkVXT0ZBayIsInRjZzNRLVdfalRzeWE0TV9pNFJEdnpjNjZjT2FHMjZkLWFmTTlOTFJWOE0iLCJ3UkkxYTY1ZE9NR3JOTzZFY0RoN0VBS0E4VDRfNGhVMzRKMnAyckRfVDFjIl19fQ.RG9UXLS6dC1ihYY9jut1a7hc4s_hOlYoAa4iwk-uFeMwz6muRvR-Hs7KyXGWSNfqmrGYHFmRWduTOH-93ZX34xA0q4P9fqOztMxbzp6Fex10NTosNpMCrNFnscsQY--4W4Dg5evQHSIiW0avzPzYvnTvMSFR7w4iigOj7WI1He_qI4YTATohT4HX26gTlDrIpuSS5iMlqLzsbjep3hA3DEc_LuFBZtDmsE3haGlIaE7Dg4GYlJH6GyHxu2HSei9T-Re-5jAPYHocXqukjgol4h8Go8wJdx-NaZ-aBcJzMtOQdzDj6sEqjQGwf6yh9jYs3CGVPYwvkwU3jltGm-E0ow~
                """
  static let issuer_metadata_sd_jwt = """
                eyJhbGciOiJFUzI1NiIsImp3ayI6eyJjcnYiOiJQLTI1NiIsImt0eSI6IkVDIiwieCI6ImEtWWFNdFYyRXZ2b09TZFZKUDdsSDU5VGQ5X2N0ckN2cUlVdTI0TEVIdXMiLCJ5IjoiUEV4aGsxb3pUUFNrN2VKc1laWFZwNVNFV01iaE9nZUhaR2dCbG5GaExqYyJ9LCJraWQiOiJBbzUwU3d6dl91V3U4MDVMY3VhVFR5c3VfNkd3b3FudkpoOXJuYzQ0VTQ4IiwidHlwIjoiSldUIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlzcyI6Imh0dHBzOi8vbGVhZi5leGFtcGxlLmNvbSIsIl9zZF9hbGciOiJzaGEtMjU2IiwiX3NkIjpbIjN4YnVoa3R6UVZMR21rMEtrbnNMVUREQVJRNDNST2Y3YlNUWFc4OXdGVXMiXSwiTmF0aW9uYWxpdGVzIjpbeyIuLi4iOiJwZjRGTllTdVhZc0tDRFJEaXlVRmNFdGI4WHRXeWc3b2cydzhSelJFZ1lvIn0seyIuLi4iOiJtNUVZU1pRM2ZQUFhEUlJtOFVvT3IzTmJXdW1IUDNvemYzSzNkd0Zqai00In1dLCJhZHJlc3MiOnsibG9jYWxpdHkiOiJnciIsIl9zZCI6WyJFd2xqSE8teFF0N3g0UGFXcU14cl9ZOTQtYUNxZ0o3dGlxTl9TdmJIazlJIiwiV1dNS0R1bTBOcWRvZHdBSU9iaGFfSEZCWmNEanNMYmRLZTJGLUk4ODZjMCIsImJieWtDUXlYeDBBZmRrU0tfSkxfNlFDQ0hfY0hPX2lnOXdOU3AxeVNGV1EiLCJnbWZhWkF5N0xXSUgweU1LWDNmTGV1VEF1NFg5M2p4MW1wTDZFUmhvdjdJIiwibFNreWRCOEx2blhmU3FRMlZMZXlWVjFuMGgwUWJ0OHBBUjFLWkVXT0ZBayIsInRjZzNRLVdfalRzeWE0TV9pNFJEdnpjNjZjT2FHMjZkLWFmTTlOTFJWOE0iLCJ3UkkxYTY1ZE9NR3JOTzZFY0RoN0VBS0E4VDRfNGhVMzRKMnAyckRfVDFjIl19fQ.qUqvjtwjFN36pYTEjChPo0xQ66M9GMogTYwfbddseqdhHcqNHWj_GQRdBUM5Gaf6RX3jyMNPYHsxcf15KsJX0Q~WyJSRGhCNm1YYTRvLXhtNWYzM1VKaGZnIiwiREUiXQ~
                """
  
  static let did_sd_jwt = """
                eyJhbGciOiJFUzI1NiIsImp3ayI6eyJjcnYiOiJQLTI1NiIsImt0eSI6IkVDIiwieCI6ImEtWWFNdFYyRXZ2b09TZFZKUDdsSDU5VGQ5X2N0ckN2cUlVdTI0TEVIdXMiLCJ5IjoiUEV4aGsxb3pUUFNrN2VKc1laWFZwNVNFV01iaE9nZUhaR2dCbG5GaExqYyJ9LCJraWQiOiJBbzUwU3d6dl91V3U4MDVMY3VhVFR5c3VfNkd3b3FudkpoOXJuYzQ0VTQ4IiwidHlwIjoiSldUIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlzcyI6ImRpZDprZXk6bGVhZi5leGFtcGxlLmNvbSIsIl9zZF9hbGciOiJzaGEtMjU2IiwiX3NkIjpbIjN4YnVoa3R6UVZMR21rMEtrbnNMVUREQVJRNDNST2Y3YlNUWFc4OXdGVXMiXSwiTmF0aW9uYWxpdGVzIjpbeyIuLi4iOiJwZjRGTllTdVhZc0tDRFJEaXlVRmNFdGI4WHRXeWc3b2cydzhSelJFZ1lvIn0seyIuLi4iOiJtNUVZU1pRM2ZQUFhEUlJtOFVvT3IzTmJXdW1IUDNvemYzSzNkd0Zqai00In1dLCJhZHJlc3MiOnsibG9jYWxpdHkiOiJnciIsIl9zZCI6WyJFd2xqSE8teFF0N3g0UGFXcU14cl9ZOTQtYUNxZ0o3dGlxTl9TdmJIazlJIiwiV1dNS0R1bTBOcWRvZHdBSU9iaGFfSEZCWmNEanNMYmRLZTJGLUk4ODZjMCIsImJieWtDUXlYeDBBZmRrU0tfSkxfNlFDQ0hfY0hPX2lnOXdOU3AxeVNGV1EiLCJnbWZhWkF5N0xXSUgweU1LWDNmTGV1VEF1NFg5M2p4MW1wTDZFUmhvdjdJIiwibFNreWRCOEx2blhmU3FRMlZMZXlWVjFuMGgwUWJ0OHBBUjFLWkVXT0ZBayIsInRjZzNRLVdfalRzeWE0TV9pNFJEdnpjNjZjT2FHMjZkLWFmTTlOTFJWOE0iLCJ3UkkxYTY1ZE9NR3JOTzZFY0RoN0VBS0E4VDRfNGhVMzRKMnAyckRfVDFjIl19fQ._HsXhiv3PuCGHH2HpUfifJLuHb69nhB_YNgyzRmYZfZ9LkdnDHxnc8VKY-iFmbyflb0hb6XkM9P0fTuQTKsxGA~WyJSRGhCNm1YYTRvLXhtNWYzM1VKaGZnIiwiREUiXQ~
                """
  
  static let did_key = """
  {
      "crv": "P-256",
      "kid": "Ao50Swzv_uWu805LcuaTTysu_6GwoqnvJh9rnc44U48",
      "kty": "EC",
      "x": "a-YaMtV2EvvoOSdVJP7lH59Td9_ctrCvqIUu24LEHus",
      "y": "PExhk1ozTPSk7eJsYZXVp5SEWMbhOgeHZGgBlnFhLjc"
  }
  """
  
  static let presentation_sd_jwt = """
eyJhbGciOiJFUzI1NiIsImNuZiI6eyJqd2siOnsiY3J2IjoiUC0yNTYiLCJrdHkiOiJFQyIsIngiOiJSbWVCZmhsTVZjcVlJckl0VmlWRE82bVV2WTh4UVJ1UFktY3JXT095MGswIiwieSI6IlliSTRZSGwzSHU2TldZYWpaTGN1M1dfd29NZnR1NzRlR2hlbnB6cVk2X3MifX0sImtpZCI6IkFvNTBTd3p2X3VXdTgwNUxjdWFUVHlzdV82R3dvcW52Smg5cm5jNDRVNDgiLCJ0eXAiOiJKV1QifQ.eyJjbmYiOnsiandrIjp7InkiOiJZYkk0WUhsM0h1Nk5XWWFqWkxjdTNXX3dvTWZ0dTc0ZUdoZW5wenFZNl9zIiwia3R5IjoiRUMiLCJjcnYiOiJQLTI1NiIsIngiOiJSbWVCZmhsTVZjcVlJckl0VmlWRE82bVV2WTh4UVJ1UFktY3JXT095MGswIn19LCJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWUsImlzcyI6Imh0dHBzOi8vbGVhZi5leGFtcGxlLmNvbSIsIl9zZF9hbGciOiJzaGEtMjU2IiwiX3NkIjpbIjN4YnVoa3R6UVZMR21rMEtrbnNMVUREQVJRNDNST2Y3YlNUWFc4OXdGVXMiXSwiTmF0aW9uYWxpdGVzIjpbeyIuLi4iOiJwZjRGTllTdVhZc0tDRFJEaXlVRmNFdGI4WHRXeWc3b2cydzhSelJFZ1lvIn0seyIuLi4iOiJtNUVZU1pRM2ZQUFhEUlJtOFVvT3IzTmJXdW1IUDNvemYzSzNkd0Zqai00In1dLCJhZHJlc3MiOnsibG9jYWxpdHkiOiJnciIsIl9zZCI6WyJFd2xqSE8teFF0N3g0UGFXcU14cl9ZOTQtYUNxZ0o3dGlxTl9TdmJIazlJIiwiV1dNS0R1bTBOcWRvZHdBSU9iaGFfSEZCWmNEanNMYmRLZTJGLUk4ODZjMCIsImJieWtDUXlYeDBBZmRrU0tfSkxfNlFDQ0hfY0hPX2lnOXdOU3AxeVNGV1EiLCJnbWZhWkF5N0xXSUgweU1LWDNmTGV1VEF1NFg5M2p4MW1wTDZFUmhvdjdJIiwibFNreWRCOEx2blhmU3FRMlZMZXlWVjFuMGgwUWJ0OHBBUjFLWkVXT0ZBayIsInRjZzNRLVdfalRzeWE0TV9pNFJEdnpjNjZjT2FHMjZkLWFmTTlOTFJWOE0iLCJ3UkkxYTY1ZE9NR3JOTzZFY0RoN0VBS0E4VDRfNGhVMzRKMnAyckRfVDFjIl19fQ.48XmC70TpafGTy5k-VSq4CcjBeQbO_p1_j0GiLS12JNSraQ35Li2y1_kcxAYFcIOw54e8guhk_SR_N0oy0pPMg~WyJSRGhCNm1YYTRvLXhtNWYzM1VKaGZnIiwiREUiXQ~eyJhbGciOiJFUzI1NiIsInR5cCI6ImtiK2p3dCJ9.eyJub25jZSI6IjEyMzQ1Njc4OSIsImF1ZCI6ImV4YW1wbGUuY29tIiwiaWF0IjoxNzI3OTQ1ODg2LCJzZF9oYXNoIjoiTWdaUmM0bzRBWlltTGtjcmZYSEhFaU5jNm9XeFZNNDV3WnpKNkxJU0FJcyJ9.3-Nt2fgvQKSXJpg0ZpASdwD0th0qxibJHSwndjNlJ0yPfh7F6-hfQ74bHOzftx-IRBAJdAyLYnsIQkkJpzYTAQ
"""
  
  static let primary_issuer_sd_jwt = "eyJhbGciOiAiRVMyNTYiLCAidHlwIjogInZjK3NkLWp3dCIsICJ4NWMiOiBbIk1JSUM0ekNDQW1xZ0F3SUJBZ0lVY09RbklHVkdWckVVZHZ1SXhTL2lPWk1Xcm80d0NnWUlLb1pJemowRUF3SXdYREVlTUJ3R0ExVUVBd3dWVUVsRUlFbHpjM1ZsY2lCRFFTQXRJRlZVSURBeE1TMHdLd1lEVlFRS0RDUkZWVVJKSUZkaGJHeGxkQ0JTWldabGNtVnVZMlVnU1cxd2JHVnRaVzUwWVhScGIyNHhDekFKQmdOVkJBWVRBbFZVTUI0WERUSTBNVEV5T1RBeE1qazFORm9YRFRJMk1ESXlNakF4TWprMU0xb3dWREVXTUJRR0ExVUVBd3dOVUVsRUlFUlRJQzBnTURBd05qRXRNQ3NHQTFVRUNnd2tSVlZFU1NCWFlXeHNaWFFnVW1WbVpYSmxibU5sSUVsdGNHeGxiV1Z1ZEdGMGFXOXVNUXN3Q1FZRFZRUUdFd0pWVkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkhUYWh4dGsvRWRBQkdxK0RYMERicEp0RGt0bjl0dlJEVUJnbXVOZkVsNnBIbVdQVS9jTVpNWUZoTmpBVW9rUTNPcVFJeDdibUNOMWZRakxERHFQeVZxamdnRVFNSUlCRERBZkJnTlZIU01FR0RBV2dCU3piTGlSRnh6WHBCcG1NWWRDNFl2QVFNeVZHekFXQmdOVkhTVUJBZjhFRERBS0JnZ3JnUUlDQUFBQkFqQkRCZ05WSFI4RVBEQTZNRGlnTnFBMGhqSm9kSFJ3Y3pvdkwzQnlaWEJ5YjJRdWNHdHBMbVYxWkdsM0xtUmxkaTlqY213dmNHbGtYME5CWDFWVVh6QXhMbU55YkRBZEJnTlZIUTRFRmdRVVFlRkJWNnp4bDRQUGRxVjk4QjZrb1VoeTNSY3dEZ1lEVlIwUEFRSC9CQVFEQWdlQU1GMEdBMVVkRWdSV01GU0dVbWgwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlsZFMxa2FXZHBkR0ZzTFdsa1pXNTBhWFI1TFhkaGJHeGxkQzloY21Ob2FYUmxZM1IxY21VdFlXNWtMWEpsWm1WeVpXNWpaUzFtY21GdFpYZHZjbXN3Q2dZSUtvWkl6ajBFQXdJRFp3QXdaQUl3YjA5UkY4YTlXRXh2NjJFakdKSFNPNnY0cHlJWGxsdEhySG9VcXFyUDhRcW9qUTh5R3NkaUdwTm5WTVVpWXlDN0FqQUJ5dEpYM1JmZnFhODdCOWIrN0Qra2FQMG1BeFJjSjhCZUdGbXhMMFd5bDF6RVpaQzhaeFdqY0RJNFVrd1dQTVU9Il19.eyJfc2QiOiBbIjIwcmhRMHFRTHpaS2hmMXJEZzFVdXo4VmlubWlGV3VCeVdua1drUWRmeHciLCAiMzVWTnViWjNXZ18zbzQ4YnV2M3VGVkFwZ0hEaXVXa0t4R0xSZ0lGbk5ycyIsICJCY0JLTFBYY2FSMGJvTjlkb1I3OEVDWHVFeG50VENFbWJueHlCamE4eEFzIiwgIkpYT0tfeWpUY0w3NlNJS2xhVjRvYlYyNVhJM3ppekZrOW5lenY2dlRES2siLCAiU1BwYnVrREh6SkpWUVBid3d3Yl9WSXp3bVBjdTZKNGtyRkNKbkdleTRjVSIsICJuTGhaRHFPUXhTUmlFbDFnUXdsdkpMUGF0U29GamRCZ0c2VmVnWkpkNy00Il0sICJpc3MiOiAiaHR0cHM6Ly9jcmVkZW50aWFsLWlzc3Vlci5leGFtcGxlLmNvbSIsICJpYXQiOiAxNzM0MzA3MjAwLCAiZXhwIjogMTc0MjA4MzIwMCwgInZjdCI6ICJ1cm46ZXU6ZXVyb3BhOmVjOmV1ZGk6cGlkOjEiLCAiX3NkX2FsZyI6ICJzaGEtMjU2IiwgImNuZiI6IHsiandrIjogeyJrdHkiOiAiRUMiLCAiY3J2IjogIlAtMjU2IiwgIngiOiAiWlMxc0E5c2dvSUg3ckZ3VTFBUWl1czlhZjB3TllaLXREdzZBaFRTd0lVRSIsICJ5IjogIlBCZi1nNUJiSjlYRE5LdzJHdHhuSGxWcFFpWFVDbVBKdEc3Z2pTcjZhUGMifX19._Gk39IWxjJLU7wIo5G4Cx4hi-tI-vV-7PsFig77hp_pIfJlwGdYCHRxpC3gJBSRQieh8AViVotXU_4i27hiiFA~WyJPeGxCYmNub0FkTjdWcUNvbER0U2p3IiwgImZhbWlseV9uYW1lIiwgInRlc3QiXQ~WyJtWk54N1ZBd3ZmelRVQS1LLVU4S3RnIiwgImdpdmVuX25hbWUiLCAidGVzIl0~WyJ5ek9rN2owNm04UHBPQW1pV3YzaTNRIiwgImJpcnRoZGF0ZSIsICIyMDI0LTEyLTE1Il0~WyJOWmxTTWlycGtaQVRCeVFRRkNNUGxnIiwgImlzc3VpbmdfYXV0aG9yaXR5IiwgIlRlc3QgUElEIGlzc3VlciJd~WyJzbmduWWp1OUxBR0xMSF9JVUhTT0FRIiwgImlzc3VpbmdfY291bnRyeSIsICJGQyJd~WyI3MWFQMkpmTUtLQ0RoYm9ZaUtqdmd3IiwgIjE4IiwgZmFsc2Vd~WyJIVTRSd2NNcGxCNnVnbmFlT2l2VGVRIiwgImFnZV9lcXVhbF9vcl9vdmVyIiwgeyJfc2QiOiBbIkZnVFRqRUUyX0FadUxjaGxibjdIS3lnUGJ5QXFaMW82Q2ZSWUZ3R0Z5eEUiXX1d~"
  
  static let secondary_issuer_sd_jwt = "eyJ4NWMiOlsiTUlJQzZ6Q0NBcEdnQXdJQkFnSVViWDhuYllTTFJ2eTEwbUtOK2hmQ1ZyLzhjQmN3Q2dZSUtvWkl6ajBFQXdJd1hERWVNQndHQTFVRUF3d1ZVRWxFSUVsemMzVmxjaUJEUVNBdElGVlVJREF5TVMwd0t3WURWUVFLRENSRlZVUkpJRmRoYkd4bGRDQlNaV1psY21WdVkyVWdTVzF3YkdWdFpXNTBZWFJwYjI0eEN6QUpCZ05WQkFZVEFsVlVNQjRYRFRJMU1EUXhNREUwTWpVME1Gb1hEVEkyTURjd05ERTBNalV6T1Zvd1VqRVVNQklHQTFVRUF3d0xVRWxFSUVSVElDMGdNRE14TFRBckJnTlZCQW9NSkVWVlJFa2dWMkZzYkdWMElGSmxabVZ5Wlc1alpTQkpiWEJzWlcxbGJuUmhkR2x2YmpFTE1Ba0dBMVVFQmhNQ1ZWUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU3J4WjEzd0xqL25VdUdlYllSbVBPMHE3cFJrMXgxU2pycUxUdnRRRnBRY3k5VHdGQ2NnaWUvQkJDMmovS3BMY0NyK29qNHR5WkFvZm12SGRhVEV4YkJvNElCT1RDQ0FUVXdId1lEVlIwakJCZ3dGb0FVWXNlVVJ5aTlENklXSUtlYXdrbVVSUEVCMDhjd0p3WURWUjBSQkNBd0hvSWNaR1YyTG1semMzVmxjaTFpWVdOclpXNWtMbVYxWkdsM0xtUmxkakFXQmdOVkhTVUJBZjhFRERBS0JnZ3JnUUlDQUFBQkFqQkRCZ05WSFI4RVBEQTZNRGlnTnFBMGhqSm9kSFJ3Y3pvdkwzQnlaWEJ5YjJRdWNHdHBMbVYxWkdsM0xtUmxkaTlqY213dmNHbGtYME5CWDFWVVh6QXlMbU55YkRBZEJnTlZIUTRFRmdRVWNzM0t5cWl6SGd0WFJlMzJuNkpCSkhBZmFMWXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1GMEdBMVVkRWdSV01GU0dVbWgwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlsZFMxa2FXZHBkR0ZzTFdsa1pXNTBhWFI1TFhkaGJHeGxkQzloY21Ob2FYUmxZM1IxY21VdFlXNWtMWEpsWm1WeVpXNWpaUzFtY21GdFpYZHZjbXN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnVFZabmNoRCtRanE1M1hzMG9jMDd5M3pHNmtBWEZrSitaS3psVkcyMnNDOENJUUR0RE1RcTBRbS9mUTVvcnJqUlQ0WEIrMEpiNnhGUHhYOVFrVlJhTXkvSWlBPT0iXSwia2lkIjoiNjI1MTE1NjIzMzA2MTIyNDk0ODA5Njg1MDI2ODI2NDM5OTAyMzM0MDY5NTM0NzQzIiwidHlwIjoiZGMrc2Qtand0IiwiYWxnIjoiRVMyNTYifQ.eyJfc2QiOlsiMFJTWURCcHdjQUx5VHVjX0V6S1oxUzRndV9ZdFNZVWJhaU1UUlJaMGJCbyIsIjJKSkRaUk1GTVBoVl9pcUZiTk1MMTZaeERtZVN5Y2ozclVHYTBYOUVOTFkiLCIyVjJIcE9sdHZReGVMM3FpMjA2dS11ai0ydnN0YkdiYk01dTFpejB6alEwIiwiM1dnQ2g1ZVRXakhfbXhKbGJ1YjFUY1d5dER0dlZUQW9qVmNiYW1hME9mVSIsIjRKaDhkQ1RiUE4zUjRPcUF2ZDVlTl9EeEx6MGxQbGZWSy1mVHJwQ0RBVTAiLCI4M0ZrZnIwc0pCUERFX2NEUC1LbWRNSnJpc1Q3ZU1BY0xNT3R4VXdPWEhVIiwiODZRci1yUTlxRFpFNlhVdmFNcWo4dXZ1VUhpLVQ3TkN2VHZjY3hkTEJ6dyIsIkhiYTJnYm9yU3VRV0g4Tm9adm9xTWVvV19USHVvSTBXZmFza21rZkZ5Zm8iLCJLSGtzUG1MaTdUcnZobDl1elF3WUhBeGluQTRXd3FoY1hHSGphWk9KdF84IiwiVGZXMkdXWU9KMmZqZmRYZllxdnBIbW5OeGJOeDh5bEI3VXRkTU1YWUgzayIsIlZiV2l1MGdZYmhrczRVbTFwNElTcW9UMjMySHJ4MC0yMXF2X1ZpbC1BUGciLCJXQjVGMnRCbXI3SHFIb2RocDFwdXlhQ2tNSl9KNUY2TWFfV0dYM1g0OG1JIiwiV21VbjNrblZyQUpWWUFjeXp2Z2JGMU9faS1raTdPaUY4Vlk1YXFrbnpWVSIsImNTajZvY2lnU2tfaTAxTmhUZHpjcjBpNzRHTDhXY0Q2TGhmYUp6Q0pJSjQiLCJjeEpGcElHeXp6UU1ScTZsSWRYS1NwTEJLRDdwOXRRdU9aSWxGWXF3aVVzIiwiZmVjVW5fM0JYRTlfTm5UNEJFNnE3X2JVNzZfOVlkRHlxbmtJOWpCUmhYQSIsImg5a1BoSFpVOFRuTmxJdmpNQ1loT2RVUHppMGo1N09Sd0pwRjZiSmtkTkkiLCJpTVpCdmh5ZW1EaUE4cmxZWHZfME1BMjdBQ2tTYzVfcEhpdERnc0lJcVBnIiwib3RzZUo4ckNMV0h0MVFJcG5LbU1tLUtEWnZLSU9hcU9hUm1qb3RoVGlBOCIsInllUTFoMUNmQzdFVmszS3RoMFRhMnprVUlKQ3JBbllXZmRMaHdsS1JxNkUiXSwidmN0IjoidXJuOmV1ZGk6cGlkOjEiLCJfc2RfYWxnIjoic2hhLTI1NiIsImlzcyI6Imh0dHBzOi8vZGV2Lmlzc3Vlci1iYWNrZW5kLmV1ZGl3LmRldiIsImNuZiI6eyJqd2siOnsia3R5IjoiRUMiLCJ1c2UiOiJzaWciLCJjcnYiOiJQLTI1NiIsImtpZCI6IkJCMDBGQTg0LTk2RjktNDZDNS04RkFELTlGQjRERDNFREU0MiIsIngiOiJjVDNwVVZvNng3VjFWTUNYZXZEZ2d2VEQ1eXpfdEU3VVhfR0dSMzI2VGpJIiwieSI6IkdfWkExRmZoMkhzVExtMmtXV1lEUFhBNElXNGNxUHNlcWlpbUI0RnNPX1kiLCJhbGciOiJFUzI1NiJ9fSwiZXhwIjoxNzYyNDk4MTg4LCJpYXQiOjE3NTk5MDYxODgsInN0YXR1cyI6eyJzdGF0dXNfbGlzdCI6eyJpZHgiOjc3MTcsInVyaSI6Imh0dHBzOi8vaXNzdWVyLmV1ZGl3LmRldi90b2tlbl9zdGF0dXNfbGlzdC9GQy91cm46ZXVkaTpwaWQ6MS9hODY4MDBlOC03NDFhLTQyM2UtYTJkMy1kMGZmMjhlMzU0NzIifX19.4xEdxnsKSEDMFARiz5iWTjvUzuTrhj4QhnKpFCYSeylJ6YnK-JF-2R8KAkVkkoQUh5wkiNnadaEl1J1Y38A55w~WyJLenNmTkVSdWJDLTFwWl9GclRJLWF3IiwiZmFtaWx5X25hbWUiLCJOZWFsIl0~WyJLeER0UVg1UWxDd2FKRTBvOWRkejhRIiwiZ2l2ZW5fbmFtZSIsIlR5bGVyIl0~WyJVcDNLVUc2WF91VWJRa2pnTzNvbDFRIiwiYmlydGhkYXRlIiwiMTk1NS0wNC0xMiJd~WyJ1RTV6cmNySThCVkFSdGJlNlZBaG5nIiwiY291bnRyeSIsIkFUIl0~WyJmOHBkMW8zZm12bzRFdWI5alZzd3JBIiwibG9jYWxpdHkiLCIxMDEgVHJhdW5lciJd~WyJGdS1YWFRwYmpzcGMweS1uV3RGNTB3IiwicGxhY2Vfb2ZfYmlydGgiLHsiX3NkIjpbIjd5dnJlRjUwVWdnT0UxbkxDV2diWU9BR0k5UzRhcVRqQkRKTkNULTd1LVUiLCJ6Yi1Qd0ZzenQ3M1QzYmJoR3ExbEc1MTJtRk9DdjUzbHRZZjJGQzJJcmRBIl19XQ~WyJ4Wk5qNDNmSUlyMVpDS2Rydk9ULXhnIiwiQVQiXQ~WyJNbWdPQl8wWWcwU21aSENjanRrN1FnIiwibmF0aW9uYWxpdGllcyIsW3siLi4uIjoiM3FTRTdpVXhMVFBwcmdHTVNyb2NrMEpuTW1PQUtzNEUxODh1d1QtY0hydyJ9XV0~WyJVSTVrYVpwS2MxS2JGeVN3bkE2dHl3IiwiaG91c2VfbnVtYmVyIiwiMTAxICJd~WyJ1aER1bTlzUGVEcjQ4bTBfU01mbWl3Iiwic3RyZWV0X2FkZHJlc3MiLCJUcmF1bmVyIl0~WyJvMHhIX3V4ZExEdFdsQkJiNmd3ZVNBIiwibG9jYWxpdHkiLCJHZW1laW5kZSBCaWJlcmJhY2giXQ~WyJLSENVS3hPNUQzVExsV0l1aTgtNklnIiwicmVnaW9uIiwiTG93ZXIgQXVzdHJpYSJd~WyJqclE2YXNPcnlKMkxEMUg1NmVaS0h3IiwicG9zdGFsX2NvZGUiLCIzMzMxIl0~WyJ6d0pIY3R2dmZaVjR2MlhpaXQ4Vk1RIiwiY291bnRyeSIsIkFUIl0~WyJCWFIyU2FCTHo3RFozOWprdGQzQ05nIiwiYWRkcmVzcyIseyJfc2QiOlsiZm9ncFN6WGplQTM2RmtqYVpqVDdhYTVfd0c3OV80c0RoSXVtTkhGS3BOOCIsIndXTmZaZmNLNktNR05qcWRIUWZOUWYyX0VacjZOX2F5Qm5SM05UaHItbVEiLCJqaVZZYmx0SGZocW01ZGlEV2VSeUxUS1dHTy1YcHVGR01Qbm1qekNLZU5nIiwiaVZWdlB4akVndVcwdTB1RWVRbDJyellucXlSb29yZ3ZqVW1YRDA3cjlfWSIsIkxBZ09UU3cyLTNiak9WVlBXeDJDd2I5bm9PWjhlakpxSVY5Qi1JS3NmM1EiLCJHTHdzMFdrUlJoMldSbVF4Zmp4Yl9Ud0hKME1YTWgtR04wd2xoX2x3Q29RIl19XQ~WyJYa1ZGQ3pzc0hGN0pvaXJvaU1UY19BIiwicGVyc29uYWxfYWRtaW5pc3RyYXRpdmVfbnVtYmVyIiwiZmViMjgxYzAtNzJiNC00YjM5LThkY2ItODIxMmMwY2I2N2NkIl0~WyJZRzNjaHRYUFRHNER4cll3ejVxNlN3IiwiYmlydGhfZmFtaWx5X25hbWUiLCJOZWFsIl0~WyIzRzN0LUUzbW1fUjE2MEJibnVXUndnIiwiYmlydGhfZ2l2ZW5fbmFtZSIsIlR5bGVyIl0~WyIyVjd6QjlzTnJtbTFQNVlWWmZqdWZBIiwic2V4IiwxXQ~WyJkWDd1TjFEODV3cVhVc0NWWTdaRGdBIiwiZW1haWwiLCJ0eWxlci5uZWFsQGV4YW1wbGUuY29tIl0~WyJyWG5lbXNWZEl3cmNvbTNsVldEdE93IiwiMTgiLHRydWVd~WyI5VzdCSGpITEsyclJhcFdteU1BUWFBIiwiYWdlX2VxdWFsX29yX292ZXIiLHsiX3NkIjpbIkZjXzBnLTRDQWFtOElOOVRoUmdfcDFaWVJ1YmhLUmZZQXFiNlR6bmNmV00iXX1d~WyJ2T1Z1RjJXd3c0VkQtRHRJc3hVVTh3IiwiYWdlX2luX3llYXJzIiw3MV0~WyJwck5LM3NjTUg1TFduUThWOWdMc0FnIiwiYWdlX2JpcnRoX3llYXIiLCIxOTU1Il0~WyIyZmVnNFZYVXNGNzl3Y1lYYVJZM01RIiwiZGF0ZV9vZl9leHBpcnkiLCIyMDI2LTAxLTE2Il0~WyJ0QVVFM04zNWlkVEliTThVTUlyMmZBIiwiaXNzdWluZ19hdXRob3JpdHkiLCJHUiBBZG1pbmlzdHJhdGl2ZSBhdXRob3JpdHkiXQ~WyI5STZWckttMS03emlra0JTczcxdklnIiwiaXNzdWluZ19jb3VudHJ5IiwiR1IiXQ~WyItMDVhbHJ6OFlGMzdsanhrR3FSQWVBIiwiZG9jdW1lbnRfbnVtYmVyIiwiNTE1NGRkNGMtMTcxYy00Y2U5LWE4OGYtNTAxMDc3YjlhMGFiIl0~WyJQTE9mM1FFUVF1cjY2MzdjTmItV0d3IiwiaXNzdWluZ19qdXJpc2RpY3Rpb24iLCJHUi1JIl0~WyJhR0pGR2duOS04Y2pWZXMxREJ0eWFBIiwiZGF0ZV9vZl9pc3N1YW5jZSIsIjIwMjUtMTAtMDgiXQ~"
  
  static let issuer_signed_sdjwt = """
  eyJ4NWMiOlsiTUlJQzZ6Q0NBcEdnQXdJQkFnSVViWDhuYllTTFJ2eTEwbUtOK2hmQ1ZyLzhjQmN3Q2dZSUtvWkl6ajBFQXdJd1hERWVNQndHQTFVRUF3d1ZVRWxFSUVsemMzVmxjaUJEUVNBdElGVlVJREF5TVMwd0t3WURWUVFLRENSRlZVUkpJRmRoYkd4bGRDQlNaV1psY21WdVkyVWdTVzF3YkdWdFpXNTBZWFJwYjI0eEN6QUpCZ05WQkFZVEFsVlVNQjRYRFRJMU1EUXhNREUwTWpVME1Gb1hEVEkyTURjd05ERTBNalV6T1Zvd1VqRVVNQklHQTFVRUF3d0xVRWxFSUVSVElDMGdNRE14TFRBckJnTlZCQW9NSkVWVlJFa2dWMkZzYkdWMElGSmxabVZ5Wlc1alpTQkpiWEJzWlcxbGJuUmhkR2x2YmpFTE1Ba0dBMVVFQmhNQ1ZWUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU3J4WjEzd0xqL25VdUdlYllSbVBPMHE3cFJrMXgxU2pycUxUdnRRRnBRY3k5VHdGQ2NnaWUvQkJDMmovS3BMY0NyK29qNHR5WkFvZm12SGRhVEV4YkJvNElCT1RDQ0FUVXdId1lEVlIwakJCZ3dGb0FVWXNlVVJ5aTlENklXSUtlYXdrbVVSUEVCMDhjd0p3WURWUjBSQkNBd0hvSWNaR1YyTG1semMzVmxjaTFpWVdOclpXNWtMbVYxWkdsM0xtUmxkakFXQmdOVkhTVUJBZjhFRERBS0JnZ3JnUUlDQUFBQkFqQkRCZ05WSFI4RVBEQTZNRGlnTnFBMGhqSm9kSFJ3Y3pvdkwzQnlaWEJ5YjJRdWNHdHBMbVYxWkdsM0xtUmxkaTlqY213dmNHbGtYME5CWDFWVVh6QXlMbU55YkRBZEJnTlZIUTRFRmdRVWNzM0t5cWl6SGd0WFJlMzJuNkpCSkhBZmFMWXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1GMEdBMVVkRWdSV01GU0dVbWgwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlsZFMxa2FXZHBkR0ZzTFdsa1pXNTBhWFI1TFhkaGJHeGxkQzloY21Ob2FYUmxZM1IxY21VdFlXNWtMWEpsWm1WeVpXNWpaUzFtY21GdFpYZHZjbXN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnVFZabmNoRCtRanE1M1hzMG9jMDd5M3pHNmtBWEZrSitaS3psVkcyMnNDOENJUUR0RE1RcTBRbS9mUTVvcnJqUlQ0WEIrMEpiNnhGUHhYOVFrVlJhTXkvSWlBPT0iXSwia2lkIjoiNjI1MTE1NjIzMzA2MTIyNDk0ODA5Njg1MDI2ODI2NDM5OTAyMzM0MDY5NTM0NzQzIiwidHlwIjoiZGMrc2Qtand0IiwiYWxnIjoiRVMyNTYifQ.eyJzdWIiOiJ0bmVhbCIsImRhdGVfb2ZfaXNzdWFuY2UiOiIyMDI1LTEwLTA5Iiwic3RhcnRpbmdfZGF0ZSI6IjIwMjYtMDUtMDciLCJ2Y3QiOiJ1cm46ZXVkaTplaGljOjEiLCJpc3MiOiJodHRwczovL2Rldi5pc3N1ZXItYmFja2VuZC5ldWRpdy5kZXYiLCJfc2QiOlsiaHRya3JISXlrYnJkejlTVmlBTkloZVRMVGhRSEo4WS1pY0xkdl9mMDc3cyIsIm1NdmQ5SXV5OE5MTWJ5dmppU1dxYXVVZF9uRVoxdkFJamJBc0JhTXdmOHciXSwiYXV0aGVudGljX3NvdXJjZSI6eyJpZCI6IlViZXItR1IiLCJuYW1lIjoiVWJlciBIZWFsdGggSW5zdXJhbmNlIn0sIm5iZiI6MTc2MDAxOTMxNCwiaXNzdWluZ19jb3VudHJ5IjoiR1IiLCJkYXRlX29mX2V4cGlyeSI6IjIwMjUtMTEtMDgiLCJpc3N1aW5nX2F1dGhvcml0eSI6eyJpZCI6IlViZXItR1IiLCJuYW1lIjoiVWJlciBIZWFsdGggSW5zdXJhbmNlIn0sIl9zZF9hbGciOiJzaGEtMjU2IiwiY25mIjp7Imp3ayI6eyJrdHkiOiJFQyIsInVzZSI6InNpZyIsImNydiI6IlAtMjU2Iiwia2lkIjoiRjQ1MDEwRTMtOEI3Mi00RjM1LTkwQzMtN0FGMUNGMzg5NEZDIiwieCI6IkVQODVUYnB1b2xheEEtNUpMX0p5NXJSbHJTdXVPY1djVmJVd0NGbU9EMmciLCJ5IjoiNTdpMll3UEo2VkhUUnFONEJVb3FZeFVxR25kNmZNYmRIRkd4R0ZOSmRZWSIsImFsZyI6IkVTMjU2In19LCJleHAiOjE3NjI2MTEzMTQsImVuZGluZ19kYXRlIjoiMjAyNi0xMC0wOSIsImlhdCI6MTc2MDAxOTMxNCwianRpIjoiY2VhZTUwMjYtNWZhMy00MWYzLWFmY2UtNzlmMDEzYjYyMzIzIn0.rlAGrsZLx-1YFiTl_rhLCI-x0zn7Seqw7XXB_J5aj4GUa98KjAUvnH3l7dAMUe9q851n_fQhvFbumHkebVjMyw~WyJZUUJ3YVdmZXlBZjhKTDl6STV1ak5RIiwicGVyc29uYWxfYWRtaW5pc3RyYXRpdmVfbnVtYmVyIiwiNDAyYmY0MzgtYzhlZC00NDdhLWJhM2YtODYxNjc0NzBiNzNhIl0~WyJrbnFIdW5KQVN1V3NmNE1uUzd5UEpBIiwiZG9jdW1lbnRfbnVtYmVyIiwiYWZmY2JjM2UtNjViOS00MWI4LTlmMjQtNjU3YTA4OWFhNDExIl0~
  """
  
  static let anIssuerPrivateKey = """
  -----BEGIN EC PRIVATE KEY-----
  MHcCAQEEIIeCg6jXTITHSH81LnYCa9zQ2hUTXc2dZw1WINLUYDo2oAoGCCqGSM49
  AwEHoUQDQgAEDIshiTluAiO/mmZhF25blPCX0ppxvzPZmZ6d7uvL+RbkBcLNnO8r
  +t3hqsE9xEotd0Wtbcos5eCe1b+yYW6xsg==
  -----END EC PRIVATE KEY-----
  """.replacingOccurrences(of: "-----BEGIN EC PRIVATE KEY-----", with: "").replacingOccurrences(of: "-----END EC PRIVATE KEY-----", with: "").trimmingCharacters(in: .whitespacesAndNewlines).replacingOccurrences(of: "\n", with: "")
  
  static let anIssuersPrivateKeySignedcertificate = "MIIBeDCCAR6gAwIBAgIUVJkRgF8lYkGo9W0ic81Ixi2yBy4wCgYIKoZIzj0EAwIwFjEUMBIGA1UEAwwLZXhhbXBsZS5jb20wHhcNMjUwNTI5MTIxMzA4WhcNMjYwNTI5MTIxMzA4WjAWMRQwEgYDVQQDDAtleGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABAyLIYk5bgIjv5pmYRduW5Twl9Kacb8z2Zmene7ry/kW5AXCzZzvK/rd4arBPcRKLXdFrW3KLOXgntW/smFusbKjSjBIMCcGA1UdEQQgMB6CC2V4YW1wbGUuY29tgg93d3cuZXhhbXBsZS5jb20wHQYDVR0OBBYEFKy5/BWnpWcWy9dPs7cJdzBNADf0MAoGCCqGSM49BAMCA0gAMEUCIG9Ew3Ok4eJUpFSLsW7i0U9gkcH0t0tP7/LLlQtd1bpXAiEAqBvnnoIyx9IRKUNbcuTEDKMpdwjl7m8Hrq6QLJ2CUSU="
  
  
  nonisolated(unsafe) static let childMetadata = ResolvedTypeMetadata(
    vct: "child_vct",
    name: "child_name",
    description: "child_description",
    displays: [
      SdJwtVcTypeMetadata.DisplayMetadata(lang: "child_display_1_lang",
            name: "child_display_1_name",
            description: "child_display_1_description",
            rendering: .init(
              simple: .init(
                logo: .init(
                  uri: URL(string: "child_display_1_rendering_simple_logo_uri")!,
                  uriIntegrity: "child_display_1_rendering_simple_logo_uri_integrity"
                ),
                backgroundColor: "child_display_1_rendering_simple_backgroundColor",
                textColor: "child_display_1_rendering_simple_textColor"
              ),
              svgTemplates: [
                .init(uri: URL(string: "child_display_1_rendering_svgTemplates_uri")!,
                      uriIntegrity: "child_display_1_rendering_svgTemplates_uriIntegrity",
                      properties: try? SdJwtVcTypeMetadata.SvgTemplateProperties(
                        orientation: "child_display_1_rendering_svgTemplates_properties_orientation",
                        colorScheme: "child_display_1_rendering_svgTemplates_properties_colorScheme",
                        contrast: "child_display_1_rendering_svgTemplates_properties_contrast"
                      )
                     )
              ]
            )
           ),
      SdJwtVcTypeMetadata.DisplayMetadata(lang: "child_display_2_lang",
            name: "child_display_2_name",
            description: "child_display_2_description",
            rendering: .init(
              simple: .init(
                logo: .init(
                  uri: URL(string: "child_display_2_rendering_simple_logo_uri")!,
                  uriIntegrity: "child_display_2_rendering_simple_logo_uri_integrity"
                ),
                backgroundColor: "child_display_2_rendering_simple_backgroundColor",
                textColor: "child_display_2_rendering_simple_textColor"
              ),
              svgTemplates: [
                .init(uri: URL(string: "child_display_2_rendering_svgTemplates_uri")!,
                      uriIntegrity: "child_display_2_rendering_svgTemplates_uriIntegrity",
                      properties: try? SdJwtVcTypeMetadata.SvgTemplateProperties(
                        orientation: "child_display_2_rendering_svgTemplates_properties_orientation",
                        colorScheme: "child_display_2_rendering_svgTemplates_properties_colorScheme",
                        contrast: "child_display_2_rendering_svgTemplates_properties_contrast"
                      )
                     )
              ]
            )
           )
    ],
    claims: [
      SdJwtVcTypeMetadata.ClaimMetadata(
        path: ClaimPath([.claim(name: "child_claims_1_path")]),
        display: [
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_1_display_1_lang",
                label: "child_claims_1_display_1_label",
                description: "child_claims_1_display_1_description"
               ),
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_1_display_2_lang",
                label: "child_claims_1_display_2_label",
                description: "child_claims_1_display_2_description"
               ),
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_1_display_3_lang",
                label: "child_claims_1_display_3_label",
                description: "child_claims_1_display_3_description"
               )
        ],
        selectivelyDisclosable: .always,
        svgId: "child_claims_1_svgId"
       ),
      SdJwtVcTypeMetadata.ClaimMetadata(
        path: ClaimPath([.claim(name: "child_claims_2_path")]),
        display: [
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_2_display_1_lang",
                label: "child_claims_2_display_1_label",
                description: "child_claims_1_display_1_description"
               ),
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_2_display_2_lang",
                label: "child_claims_2_display_2_label",
                description: "child_claims_2_display_2_description"
               ),
          SdJwtVcTypeMetadata.ClaimDisplay(lang: "child_claims_2_display_3_lang",
                label: "child_claims_2_display_3_label",
                description: "child_claims_2_display_3_description"
               )
        ],
        selectivelyDisclosable: .always,
        svgId: "child_claims_1_svgId"
       )
    ])
  
  nonisolated(unsafe) static let parentMetadata = ResolvedTypeMetadata(
    vct: "parent_vct",
    name: "parent_name",
    description: "parent_description",
    displays: [
      SdJwtVcTypeMetadata.DisplayMetadata(
        lang: "parent_display_1_lang",
        name: "parent_display_1_name",
        description: "parent_display_1_description",
        rendering: .init(
          simple: .init(
            logo: .init(
              uri: URL(string: "parent_display_1_rendering_simple_logo_uri")!,
              uriIntegrity: "parent_display_1_rendering_simple_logo_uri_integrity"
            ),
            backgroundColor: "parent_display_1_rendering_simple_backgroundColor",
            textColor: "parent_display_1_rendering_simple_textColor"
          ),
          svgTemplates: [
            .init(
              uri: URL(string: "parent_display_1_rendering_svgTemplates_uri")!,
              uriIntegrity: "parent_display_1_rendering_svgTemplates_uriIntegrity",
              properties: try? SdJwtVcTypeMetadata.SvgTemplateProperties(
                orientation: "parent_display_1_rendering_svgTemplates_properties_orientation",
                colorScheme: "parent_display_1_rendering_svgTemplates_properties_colorScheme",
                contrast: "parent_display_1_rendering_svgTemplates_properties_contrast"
              )
            )
          ]
        )
      ),
      SdJwtVcTypeMetadata.DisplayMetadata(
        lang: "parent_display_2_lang",
        name: "parent_display_2_name",
        description: "parent_display_2_description",
        rendering: .init(
          simple: .init(
            logo: .init(
              uri: URL(string: "parent_display_2_rendering_simple_logo_uri")!,
              uriIntegrity: "parent_display_2_rendering_simple_logo_uri_integrity"
            ),
            backgroundColor: "parent_display_2_rendering_simple_backgroundColor",
            textColor: "parent_display_2_rendering_simple_textColor"
          ),
          svgTemplates: [
            .init(
              uri: URL(string: "parent_display_2_rendering_svgTemplates_uri")!,
              uriIntegrity: "parent_display_2_rendering_svgTemplates_uriIntegrity",
              properties: try? SdJwtVcTypeMetadata.SvgTemplateProperties(
                orientation: "parent_display_2_rendering_svgTemplates_properties_orientation",
                colorScheme: "parent_display_2_rendering_svgTemplates_properties_colorScheme",
                contrast: "parent_display_2_rendering_svgTemplates_properties_contrast"
              )
            )
          ]
        )
      )
    ],
    claims: [
      SdJwtVcTypeMetadata.ClaimMetadata(
        path: ClaimPath([.claim(name: "parent_claims_1_path")]),
        display: [
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_1_display_1_lang",
            label: "parent_claims_1_display_1_label",
            description: "parent_claims_1_display_1_description"
          ),
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_1_display_2_lang",
            label: "parent_claims_1_display_2_label",
            description: "parent_claims_1_display_2_description"
          ),
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_1_display_3_lang",
            label: "parent_claims_1_display_3_label",
            description: "parent_claims_1_display_3_description"
          )
        ],
        selectivelyDisclosable: .always,
        svgId: "parent_claims_1_svgId"
      ),
      SdJwtVcTypeMetadata.ClaimMetadata(
        path: ClaimPath([.claim(name: "parent_claims_2_path")]),
        display: [
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_2_display_1_lang",
            label: "parent_claims_2_display_1_label",
            description: "parent_claims_2_display_1_description"
          ),
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_2_display_2_lang",
            label: "parent_claims_2_display_2_label",
            description: "parent_claims_2_display_2_description"
          ),
          SdJwtVcTypeMetadata.ClaimDisplay(
            lang: "parent_claims_2_display_3_lang",
            label: "parent_claims_2_display_3_label",
            description: "parent_claims_2_display_3_description"
          )
        ],
        selectivelyDisclosable: .always,
        svgId: "parent_claims_2_svgId"
      )
    ]
  )
  
  
  static func loadRootCertificates() throws -> [Certificate] {
    let certNames = [
      "pidissuerca02_cz",
      "pidissuerca02_ee",
      "pidissuerca02_eu",
      "pidissuerca02_lu",
      "pidissuerca02_nl",
      "pidissuerca02_pt",
      "pidissuerca02_ut"
    ]
    
    return try certNames.map { name in
      guard let path = Bundle.module.path(forResource: name, ofType: "der") else {
        throw NSError(
          domain: "CertLoadError",
          code: 1,
          userInfo: [NSLocalizedDescriptionKey: "Missing certificate: \(name)"]
        )
      }
      
      let data = try Data(contentsOf: URL(fileURLWithPath: path))
      
      // Parse the DER-encoded certificate
      return try Certificate(derEncoded: Array(data))
    }
  }
  
  nonisolated(unsafe) static let issuerSignedJWSJSON: JSON = [
    "payload" : "eyJzdWIiOiJ0bmVhbCIsImRhdGVfb2ZfaXNzdWFuY2UiOiIyMDI1LTEwLTA5Iiwic3RhcnRpbmdfZGF0ZSI6IjIwMjYtMDUtMDciLCJ2Y3QiOiJ1cm46ZXVkaTplaGljOjEiLCJpc3MiOiJodHRwczovL2Rldi5pc3N1ZXItYmFja2VuZC5ldWRpdy5kZXYiLCJfc2QiOlsiRl90a2Vod0RqT0NmOGg1RU53MXFqZ1V1cWVVYTQybnR4VjFmU2d6U2pFUSIsImhWNWhFdVkwWWlfRjM0MUZPa1FvRVlLal8ydndIbHU1bUg0TnVlOElZTzAiXSwiYXV0aGVudGljX3NvdXJjZSI6eyJpZCI6IlViZXItR1IiLCJuYW1lIjoiVWJlciBIZWFsdGggSW5zdXJhbmNlIn0sIm5iZiI6MTc1OTk4ODgxOSwiaXNzdWluZ19jb3VudHJ5IjoiR1IiLCJkYXRlX29mX2V4cGlyeSI6IjIwMjUtMTEtMDgiLCJpc3N1aW5nX2F1dGhvcml0eSI6eyJpZCI6IlViZXItR1IiLCJuYW1lIjoiVWJlciBIZWFsdGggSW5zdXJhbmNlIn0sIl9zZF9hbGciOiJzaGEtMjU2IiwiY25mIjp7Imp3ayI6eyJrdHkiOiJFQyIsInVzZSI6InNpZyIsImNydiI6IlAtMjU2Iiwia2lkIjoiNzRERTAyRkUtNzQ5RS00ODY5LThCRTQtNURFNDgxM0U1NjA5IiwieCI6IkVQODVUYnB1b2xheEEtNUpMX0p5NXJSbHJTdXVPY1djVmJVd0NGbU9EMmciLCJ5IjoiNTdpMll3UEo2VkhUUnFONEJVb3FZeFVxR25kNmZNYmRIRkd4R0ZOSmRZWSIsImFsZyI6IkVTMjU2In19LCJleHAiOjE3NjI1ODA4MTksImVuZGluZ19kYXRlIjoiMjAyNi0xMC0wOSIsImlhdCI6MTc1OTk4ODgxOSwianRpIjoiNTViYzkyNzktYzE3Yy00NTk1LWEyNWQtNGM5MjNjYTY2OGRmIn0",
    "protected" : "eyJ4NWMiOlsiTUlJQzZ6Q0NBcEdnQXdJQkFnSVViWDhuYllTTFJ2eTEwbUtOK2hmQ1ZyLzhjQmN3Q2dZSUtvWkl6ajBFQXdJd1hERWVNQndHQTFVRUF3d1ZVRWxFSUVsemMzVmxjaUJEUVNBdElGVlVJREF5TVMwd0t3WURWUVFLRENSRlZVUkpJRmRoYkd4bGRDQlNaV1psY21WdVkyVWdTVzF3YkdWdFpXNTBZWFJwYjI0eEN6QUpCZ05WQkFZVEFsVlVNQjRYRFRJMU1EUXhNREUwTWpVME1Gb1hEVEkyTURjd05ERTBNalV6T1Zvd1VqRVVNQklHQTFVRUF3d0xVRWxFSUVSVElDMGdNRE14TFRBckJnTlZCQW9NSkVWVlJFa2dWMkZzYkdWMElGSmxabVZ5Wlc1alpTQkpiWEJzWlcxbGJuUmhkR2x2YmpFTE1Ba0dBMVVFQmhNQ1ZWUXdXVEFUQmdjcWhrak9QUUlCQmdncWhrak9QUU1CQndOQ0FBU3J4WjEzd0xqL25VdUdlYllSbVBPMHE3cFJrMXgxU2pycUxUdnRRRnBRY3k5VHdGQ2NnaWUvQkJDMmovS3BMY0NyK29qNHR5WkFvZm12SGRhVEV4YkJvNElCT1RDQ0FUVXdId1lEVlIwakJCZ3dGb0FVWXNlVVJ5aTlENklXSUtlYXdrbVVSUEVCMDhjd0p3WURWUjBSQkNBd0hvSWNaR1YyTG1semMzVmxjaTFpWVdOclpXNWtMbVYxWkdsM0xtUmxkakFXQmdOVkhTVUJBZjhFRERBS0JnZ3JnUUlDQUFBQkFqQkRCZ05WSFI4RVBEQTZNRGlnTnFBMGhqSm9kSFJ3Y3pvdkwzQnlaWEJ5YjJRdWNHdHBMbVYxWkdsM0xtUmxkaTlqY213dmNHbGtYME5CWDFWVVh6QXlMbU55YkRBZEJnTlZIUTRFRmdRVWNzM0t5cWl6SGd0WFJlMzJuNkpCSkhBZmFMWXdEZ1lEVlIwUEFRSC9CQVFEQWdlQU1GMEdBMVVkRWdSV01GU0dVbWgwZEhCek9pOHZaMmwwYUhWaUxtTnZiUzlsZFMxa2FXZHBkR0ZzTFdsa1pXNTBhWFI1TFhkaGJHeGxkQzloY21Ob2FYUmxZM1IxY21VdFlXNWtMWEpsWm1WeVpXNWpaUzFtY21GdFpYZHZjbXN3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUlnVFZabmNoRCtRanE1M1hzMG9jMDd5M3pHNmtBWEZrSitaS3psVkcyMnNDOENJUUR0RE1RcTBRbS9mUTVvcnJqUlQ0WEIrMEpiNnhGUHhYOVFrVlJhTXkvSWlBPT0iXSwia2lkIjoiNjI1MTE1NjIzMzA2MTIyNDk0ODA5Njg1MDI2ODI2NDM5OTAyMzM0MDY5NTM0NzQzIiwidHlwIjoiZGMrc2Qtand0IiwiYWxnIjoiRVMyNTYifQ",
    "header" : [
      "disclosures" : [
        "WyJtMnZiZ180UlN3eVMwRXBRRzQzYkdBIiwicGVyc29uYWxfYWRtaW5pc3RyYXRpdmVfbnVtYmVyIiwiNzlkZWU2ZTctY2QyMi00YjlkLTlhN2QtNTFkMDhlYTk0OGE3Il0",
        "WyJqckNuM0JGR3JiMEU0NVIyUnFaNTZ3IiwiZG9jdW1lbnRfbnVtYmVyIiwiNjQ0NmFkMTAtNTk4MS00ZmRhLTgzYTItYTdmNzA5MjBhNGVmIl0"
      ]
    ],
    "signature" : "zZyi69aFm7q43h5H4O0sXDznuly6mrxXK4aSFpmNDG-aey4mdolS37rSuDEU5BHrwan7Bn3MFyrx6_xFRs1rqQ"
  ]
}
